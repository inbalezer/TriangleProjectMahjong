@using Microsoft.AspNetCore.Components.Web

<div class="popup-overlay">
    <div class="popup-container">
        <div class="popup-content">
            <div class="popup-close">
                <button class="popup-close-button" @onclick="IsDeleteButtonClicked">x</button>
            </div>
            <h3>@Headline</h3>
            <p> @gameName :@Text1 </p>
            <p>@Text2 </p>

            <div class="popup-buttons">
                <button class="popup-button" style="background-color: red; color: white;" @onclick="()=> DeleteGameFromList(true)">@actionButtonText</button>
                <button class="popup-button" style="background-color: white; color: red; border: 2px solid red;" @onclick="IsDeleteButtonClicked">@cancelButtonText</button>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: rgba(0, 0, 0, 0.5);
    }

    .popup-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .popup-container {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        padding: 20px;
        position: relative;
        display: flex; /* Add display property */
        align-items: center; /* Center vertically */
        justify-content: center; /* Center horizontally */
    }


    .popup-content {
        text-align: center;
    }

    .popup-close {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .popup-close-button {
        background-color: transparent;
        border: none;
        font-size: 18px;
        font-weight: bold;
        color: red;
        cursor: pointer;
    }

    .popup-buttons {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .popup-button {
        padding: 8px 16px;
        margin: 0 8px;
    }
</style>


@code {



    [Parameter]
    public bool notDeleted { get; set; }

    [Parameter]
    public int gameId { get; set; }

    [Parameter]
    public string gameName { get; set; }
    [Parameter]
    public string actionButtonText { get; set; }
    [Parameter]
    public string cancelButtonText { get; set; }

    [Parameter]
    public string Headline { get; set; }

    [Parameter]
    public string Text1 { get; set; }

    [Parameter]
    public string Text2 { get; set; }

    [Parameter]
    public EventCallback<bool> ShowMsg { get; set; }

    [Parameter]
    public EventCallback<int> GameIdToDelete { get; set; }


    private void DeleteGameFromList(bool closedPopup)
    {
        GameIdToDelete.InvokeAsync(gameId);
        if (closedPopup)
        {
            ShowMsg.InvokeAsync(false);
        }
    }

    private void IsDeleteButtonClicked()
    {
        notDeleted = true;
        ShowMsg.InvokeAsync(notDeleted);
    }

}
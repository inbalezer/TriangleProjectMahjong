
@using Microsoft.AspNetCore.Components.Web
@using TriangleProject.Shared.Models.Editor
@using TriangleProject.Shared.Models.Matches
@using TriangleProject.Shared.Models.Portelem
@using TriangleProject.Client.Components

@inject HttpClient Http
@inject NavigationManager nav
@inject NavigationManager Nav


<div class="game-card">
    <div class="title">@GameFullName</div>
    <div class="content">
        <div class="custom-tooltip" title="מעבר לעמוד עריכת תוכן המשחק והגדרותו">
            <input type="button" value="Update" @onclick="updateNavigate" />

        </div>
        <div class="custom-tooltip" title="את קוד המשחק יש להזין כדי להיכנס אליו">@gameCode</div>

        <span>סטטוס פרסום </span>
        <span class="custom-tooltip" title="פרסום המשחק הופך אותו לזמין">
            (i)
        </span>

        <div>

            @if (GamePublishStatus == "Not Eligible")
            {
                <input class="custom-tooltip" title=@dynamicConditionMsg type="checkbox" disabled />
                @*<input type="button" value="Delete"  />*@
                @*<span><img src="/trash3.svg" alt="Icon" @onclick="(() =>DeleteGame(game))" /> </span>*@

            }
            else if (GamePublishStatus == "Eligible")
            {
                <input type="checkbox" @onchange="changePublish" />
            }
            else
            {
                <input type="checkbox" checked @onchange="changePublish" />
            }
        </div>
        <div class="delete-button-container">
            <button class="delete-button" @onclick="deleteGame"><img style="height:50px; width:50px;" src="../css/games list imgs/trash1.svg" /></button>

        </div>
    </div>
</div>

@code {

    [CascadingParameter]
    public int UserId { get; set; }


    public class showMsgInfo
    {
        public bool MsgStatus { get; set; }
        public string GameName { get; set; }
    }

    @*showMsgInfo showMsg = new showMsgInfo();*@

    [Parameter]
    public GameForEditor gameToPublish { get; set; }

    [Parameter]
    public string GameFullName { get; set; }
    [Parameter]
    public bool GameInstructionToCheck { get; set; }

    [Parameter]
    public string GamePublishStatus { get; set; }

    [Parameter]
    public int gameCode { get; set; }

    [Parameter]
    public int gameId { get; set; }

    [Parameter]
    public bool isClicked { get; set; }

    [Parameter]
    public EventCallback<string> GamePublish { get; set; }
    [Parameter]
    public EventCallback<bool> isCheckboxClicked { get; set; }
    [Parameter]
    public EventCallback<bool> showMsg { get; set; }

    string dynamicConditionMsg = "";

    void changePublish()
    {

        isCheckboxClicked.InvokeAsync(true);
    }

    protected override void OnInitialized()
    {

        if (GameInstructionToCheck == true)
        {
            dynamicConditionMsg = "אי אפשר לפרסם משחק ללא הנחייה ועם פחות מ-5 זוגות";
        }
        else
        {
            dynamicConditionMsg = "אי אפשר לפרסם משחק עם פחות מ-5 זוגות";
        }
    }
    void deleteGame()
    {

        showMsg.InvokeAsync(true);
    }



    void updateNavigate()
    {
        //    nav.NavigateTo("./EditGamePage/" + GameFullName + "/" + UserId);

        nav.NavigateTo("./EditGamePage/" + GameFullName + "/" + gameId);
    }

}




<style>
    .game-card {
        width: 100%;
        max-width: 254px;
        height: auto;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        background-color: white;
        margin: 20px;
    }

    .title {
        background-color: #d0e6f5;
        text-align: center;
        padding: 5px 0;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }

    .content {
        margin-top: 10px;
    }

    .toggle-button {
        margin-top: 10px;
        width: 100%;
    }

    .delete-button-container {
        text-align: center;
        margin-top: 10px;
    }

    .delete-button {
        /* Add your styling for the delete button here */
    }

    .custom-tooltip {
        position: relative;
        cursor: help;
    }

        .custom-tooltip::after {
            content: attr(title);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            padding: 4px 8px;
            background-color: #333;
            color: #fff;
            font-size: 12px;
            border-radius: 4px;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
            white-space: nowrap;
        }

        .custom-tooltip:hover::after {
            opacity: 1;
            visibility: visible;
        }
</style>


